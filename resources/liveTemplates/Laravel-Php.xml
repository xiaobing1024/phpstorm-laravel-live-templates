<templateSet group="Laravel-Php">
  <template name="geta" value="public function get$NAME$Attribute()&#10;{&#10;    return $END$;&#10;}" description="laravel getAttribute" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="if" value="if ($NAME$) {&#10;    $END$&#10;}" description="laravel if" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="switch" value="switch ($EXPRESSION$) {&#10;    case $CONSTANT$:&#10;        $STATEMENTS$&#10;        break;&#10;&#10;    default:$END$&#10;        break;&#10;}" description="laravel switch" toReformat="false" toShortenFQNames="true">
    <variable name="EXPRESSION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONSTANT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="STATEMENTS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="ife" value="if ($NAME$) {&#10;    $NEXT$&#10;} else {&#10;    $END$&#10;}" description="laravel ife" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="hasOne" value="public function $VAR_VALUE$()&#10;{&#10;    return $this-&gt;hasOne($ITERABLE$::class, $NEXT$);&#10;}" description="laravel hasOne" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_VALUE" expression="snakeCase(ITERABLE)" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="belongsTo" value="public function $VAR_VALUE$()&#10;{&#10;    return $this-&gt;belongsTo($ITERABLE$::class, $NEXT$);&#10;}" description="laravel belongsTo" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_VALUE" expression="snakeCase(ITERABLE)" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="hasMany" value="public function $VAR_VALUE$()&#10;{&#10;    return $this-&gt;hasMany($ITERABLE$::class, $NEXT$);&#10;}" description="laravel hasMany" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_VALUE" expression="snakeCase(ITERABLE)" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="belongsToMany" value="public function $VAR_VALUE$()&#10;{&#10;    return $this-&gt;belongsToMany($ITERABLE$::class, $NEXT$);&#10;}" description="laravel belongsToMany" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_VALUE" expression="snakeCase(ITERABLE)" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="hasManyThrough" value="public function $NAME$()&#10;{&#10;    return $this-&gt;hasManyThrough($END$);&#10;}" description="laravel hasManyThrough" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="hasOneThrough" value="public function $NAME$()&#10;{&#10;    return $this-&gt;hasOneThrough($END$);&#10;}" description="laravel hasOneThrough" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphTo" value="public function $NAME$()&#10;{&#10;    return $this-&gt;morphTo();&#10;}" description="laravel morphTo" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphMany" value="public function $NAME$()&#10;{&#10;    return $this-&gt;morphMany($END$);&#10;}" description="laravel morphMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphOne" value="public function $NAME$()&#10;{&#10;    return $this-&gt;morphOne($END$);&#10;}" description="laravel morphOne" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphToMany" value="public function $NAME$()&#10;{&#10;    return $this-&gt;morphToMany($END$);&#10;}" description="laravel morphToMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="morphedByMany" value="public function $NAME$()&#10;{&#10;    return $this-&gt;morphedByMany($END$);&#10;}" description="laravel morphedByMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="seta" value="public function set$NAME$Attribute()&#10;{&#10;    return $END$;&#10;}" description="laravel setAttribute" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="funcq" value="function ($q) {&#10;    $q-&gt;where($END$);&#10;}" description="laravel funcq" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="else" value="else {&#10;    $END$&#10;}" description="laravel else" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="elseif" value="elseif ($NEXT$) {&#10;    $END$&#10;}" description="laravel elseif" toReformat="false" toShortenFQNames="true">
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="func" value="function () {&#10;    $END$&#10;}" description="laravel func" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="fori" value="for ($i = 0; $i &lt; $NEXT$; $i++) {&#10;    $END$&#10;}" description="laravel fori" toReformat="false" toShortenFQNames="true">
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="dbbeginTransaction" value="try {&#10;    DB::beginTransaction();&#10;    $START$&#10;    DB::commit();&#10;    return $NEXT$;&#10;} catch (\Exception $e) {&#10;    DB::rollBack();&#10;    return $END$;&#10;}" description="laravel dbbeginTransaction" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="dbtransaction" value="DB::transaction(function () {&#10;    $START$&#10;});" description="laravel dbTransaction" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Statement" value="true" />
    </context>
  </template>
</templateSet>